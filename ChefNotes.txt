Source: https://www.youtube.com/playlist?list=PLNyQbpmrfJd6gFxEa8dT0iswijOIQDMJu

****Chef Notes****
--------------------
1. Chef Workstation, Chef Server, Chef Client.
2. Knife is the CLI on the workstation.
3. Download and install the ChefDK on the workstation machine. Receipe is .rb file that works with one or more resources. A resource can be a file, package, etc.
    #Creates a file resource with fileName, must start with do and end.
    file "<fileName>" do
        #Creates the contents of the file
        content "BISMILLAH"
        #Performs an action on the file
        action :delete
    end
4. chef-apply receipe.rb
5. Creating a package resource
    package "apache2" do
        #Install is also the default action
        action :install
    end
Since the default is install we can replace the above set of commands with simply
    package apache2
6.  To work with the apache2 service the name will be apache2 or httpd on different flavors of Unix. To Enable and start the service use the below command
    service apache2 do
        action [:enable, :start]
    end
7.  Change the default home page content of apache2
    file "/var/www/html/index.html" do
        content "<html>
            <body>
                <h1>Hello World</h1>
            </body>
        </html>"
    done
8. To find out the different attributes for all resources check the chef documentation.
9. The steps 5,6,7 can be combined and is a single receipe for installing apache2 and setting up homepage for apache2
10. This receipe will be tested on workstation using the chef-apply command and then pushed to the server and the nodes will pick these cookbook automatically.
11. We need to bundle the receipe as a Cookbook
        chef generate cookbook <cookbookName>
        chef generate cookbook learn_chef_apache2
12. tree command on the linux will list the directory structure in the form of a hierarchial strucutre tree.
13. In the apache2 example, we cannot always type the content of the html page, so we can use templates, to generate a template
        chef generate template <cookbookName> <templateName>
        chef generate template learn_chef_apache2 index.html
    This will generate an .erb file in which we can have placeholders and variables.
14. Starting point is the cookbookName/receipes/default.rb
15. Now to use the template in the receipe file instead of creation the file resource use
        template '/var/www/html/index.html' do
            souce 'index.html.erb'
        end
16. To run a cookbook
        chef-client --local-mode --runlist 'receipe[<cookbookName>]'
17. We can use the cloud Chef server at http://manage.chef.io by creating an account. Then create an organisation which is like a cluster which have same policies. Goto administration and download the starter kit for that organisation. Unzip it. This will create new folders like nodes, .chef which will specify where the server is located.
18. http://supermarket.chef.io has cookbooks which we can download and use.
19. To download and install a cookbook from the supermarket
        knife cookbook site download <cookBookNameFromTheSuperMarket>
    This will give us a tarball. Extract it and place it in the cookbooks folder
20. To upload a cookbook to the server
        knife cookbook upload cookbookName
21. To setup a node from workstation, this will setup the node with chef client and then run the receipe
        knife bootstrap <ipOfTheNode> --ssh-user userName --ssh-password 'passWord' --sudo --use-sudo-password  --node-name cnode1 --run-list 'receipe[cookbookName]'
22. List all the nodes from the workstation
        knife node list
        knife node show nodeName
23. Node will then connect in 30mins to the server and check its status if it is required to run any receipes.
24. Create receipes and cookbooks in the workstation and test it and upload it to the chef server. Configure the chef nodes to communicate with the chef server and get the receipes and cookbooks from the server and execute it.
25. CONFIGURING THE CHEF SERVER: Download the chef server rpm and install it. To configure the server 
        chef-server-ctl reconfigure
        chef-server-ctl status
The server UI can also be accessed at https://ipOfTheChefServer

******************************************************************************************************************************************
******************************************************************************************************************************************
******************************************************************************************************************************************
26. CONFIGURING THE CHEF WORKSTATION: Download the chef worstation rpm and install. We need to share the certificates between the server and the workstation for the communication to take place. The certificates (pem files) in the chef server will be available at  
        /etc/chef-server
    Create a .chef folder in the workstation and copy the 3 pem files to it.
    Configure the knife CLI on the worstation
        knife ssl fetch
        knife ssl check
        knife configure -i
    Enter the details of the chef server, user that exists on the chef server, location of admin.pem, chef-validator.pem and password of the user.
        knife client list
        knife user list
27. CONFIGURING THE CHEF NODE: Download and install the chef node rpm. Since communication to the server is based on certificates create a directory /etc/chef and copy the chef-validator.pem from the server. Then fetch the certificates from the chef server
        knife ssl fetch -s https://ipOftheChefServer
In the home directory .chef folder we will see a folder trusted_certs with the server certificate.
        knife ssl check -s https://ipOftheChefServer
In the /etc/chef create a client.rb file
        log_level :info
        log_location STDOUT
        chef_server_url 'https://ipOfTheChefServer'
        trusted_certs_dir 'locationOfTheTrustedCertsDir'
To join the node to the server
        chef-client -S https://ipOfTheChefServer -K /etc/chef/chef-validator.pem
From the workstation
        knife client list
        knife user list
28. To create a cookbook, this will be placed in /var/chef/cookbooks
        knife cookbook create cookbookName
Navigate to the folder and inside receipes default.rb create a file with some contents. To test the validity of the cookbook/syntax errors
        knife cookbook test cookbookName
        knife cookbook upload cookbookName
        knife cookbook list
We can navigate to the server UI URL, open the nodes, and add this available receipe to the runlist and in the node machine to apply it
        chef-client

******************************************************************************************************************************************
******************************************************************************************************************************************
******************************************************************************************************************************************
https://www.youtube.com/playlist?list=PLOibJV1fZEv2bbdXKknxi0Vhg9HTmjPVr
1. Chef Client on the Nodes, Chef DK on the Workstation and Chef Core on the Chef Server.
2. Configuration Management: Hardware, Software, Infrastructure, People and process.
3. Pain points: For N number of machines, Creating User Accounts, Patch management, taking backups, deploying applications, configure services, documenting steps. (Changing the STATE of the server)
4. Chef is an automation software for configuring and managing the infrastructure in Cloud or On Premise.
5. Chef is called as IaaC - Infrastructure as code.
6. Chef specifies what should be the desired state of the infrastructure. The configuration specifies what to be installed and not how to install. 
7. Workstation - Write code/configuration that describes the state of a node and deploy it to the Chef Server. The location from which users do most of their work.
Node - A node is any machine that is under the management of Chef (Physical, Virtual, Cloud, network device, etc)
Chef Server - Acts as a hub for configuration data and stores cookbooks, policies that are applied to nodes and related metadata
Chef Client - An agent that runs locally on every node that is under management by chef to bring the node into expected state.
Knife - Tool that provides an interface between a local chef repo and the chef server and helps users manage nodes, cookbooks, receipes, roles and environments.
Ohai - Tool that is used to detect attributes  on a node,  and then provide these attributes to the chef client at the start of every chef-client run. Platform and Network details, CPU data and kernet data, Memory usage and other configuration details.
8. State - Snapshot of configuration of the node.
9. Nodes will periodically poll for updates from the chef-server and update it if it is not in the required state.
10. Resources - Anything that we want to change or configure in the host. Files, Dirs, Users and Groups, Packages and services.
11. Receipe - Resources are gathered into a file called as Receipe which ensures that the system is in desired state. DSL(Domain specific language) used by chef are actually just a subset of Ruby.
12. Cookbook - The fundamental unit of configuration and policy distribution. Each cookbook defines a scenario such as everything needed to install and configure MySQL. Then it contains all the components that are required to support this scenario. Can have 1 or more receipes and configuration.
13. In workstation create a hello.rb file and chef-apply hello.rb to run it. This is running a receipe locally.
14. default action for a file is create. Similarly there will default actions for all resources.
15. + is addition or new changes made, - removed the change.
16. Chef workflow: Read, Test and Repair.
17. Chef Client Server architecture and Chef Solo(the node itself is workstation and the recipes are run on the node directly)
18. 